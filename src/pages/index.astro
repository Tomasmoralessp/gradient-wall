---
import Layout from "../layouts/Layout.astro";
import ChatInterface from "../components/ChatInterface.astro";
---

<Layout title="GradientWall">
  <div
    class="min-h-screen bg-white dark:bg-slate-950 transition-colors duration-300"
  >
    <main class="flex flex-col relative">
      <!-- Header -->
      <header
        class="fixed top-0 left-0 right-0 z-50 w-full bg-slate-500/20 dark:bg-black/50 px-4 sm:px-10 py-6 sm:py-4 flex items-center justify-between flex-shrink-0 backdrop-blur-sm"
      >
        <div class="flex items-center gap-2">
          <div class="flex text-slate-900 dark:text-white">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 32 32"
              class="size-6 sm:size-6"
            >
              <defs>
                <linearGradient
                  id="navGradient"
                  x1="0%"
                  y1="0%"
                  x2="100%"
                  y2="100%"
                >
                  <stop offset="0%" style="stop-color:#FF6B6B"></stop>
                  <stop offset="100%" style="stop-color:#4ECDC4"></stop>
                </linearGradient>
              </defs>
              <rect
                x="4"
                y="4"
                width="24"
                height="24"
                rx="6"
                fill="url(#navGradient)"></rect>
            </svg>
          </div>
          <a
            href="#"
            class="text-base sm:text-base font-bold text-slate-900 dark:text-white flex"
          >
            GradientWall®
          </a>
        </div>

        <!-- Theme Toggle Button -->
        <button
          id="themeToggle"
          class="flex items-center gap-2 px-3 py-1.5 rounded-full bg-slate-200 dark:bg-white/10 hover:bg-slate-300 dark:hover:bg-white/20 transition-colors text-slate-900 dark:text-white"
          aria-label="Toggle theme"
        >
          <!-- Sun icon -->
          <svg
            id="sunIcon"
            class="w-5 h-5"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z"
            ></path>
          </svg>

          <!-- Moon icon -->
          <svg
            id="moonIcon"
            class="w-5 h-5"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M21.752 15.002A9.72 9.72 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z"
            ></path>
          </svg>
        </button>
      </header>

      <!-- Gradient Section -->
      <section
        class="min-h-screen pt-20 flex flex-col items-center justify-center px-4"
      >
        <!-- Download Hint -->
        <div
          id="downloadHint"
          class="fixed top-24 left-1/2 -translate-x-1/2 mb-6 text-center opacity-0 transition-opacity duration-500"
        >
          <p
            class="text-white/90 text-sm bg-black/40 backdrop-blur-sm px-4 py-2 rounded-full border border-white/10"
          >
            Double-click or long press to download
          </p>
        </div>

        <!-- Gradient Box -->
        <div
          id="gradientBox"
          class="w-full max-w-[400px] aspect-[4/5] sm:h-80 bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 rounded-2xl sm:rounded-3xl grid grid-rows-12 grid-cols-12 p-3 sm:p-4 hover:shadow-lg hover:shadow-white/20 transition-all duration-300 cursor-pointer mb-8"
        >
          <!-- Color Picker 1 -->
          <div
            class="h-10 w-10 sm:h-12 sm:w-12 shadow-md shadow-black flex justify-center items-center col-start-1 row-start-1"
          >
            <input
              type="color"
              id="color1"
              value="#4f46e5"
              class="w-full h-full hover:cursor-pointer"
            />
          </div>

          <!-- Color Picker 2 -->
          <div
            class="h-10 w-10 sm:h-12 sm:w-12 shadow-md shadow-black flex justify-center items-center self-end justify-self-end col-start-12 row-start-12"
          >
            <input
              type="color"
              id="color2"
              value="#ec4899"
              class="w-full h-full hover:cursor-pointer"
            />
          </div>
        </div>

        <!-- Chat Interface Component -->
        <ChatInterface />
      </section>

      <!-- Footer -->
      <footer class="w-full bg-slate-800 py-12 sm:py-20 text-white">
        <div class="w-full px-4 sm:px-6 lg:px-8 max-w-7xl mx-auto">
          <div
            class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-8 sm:gap-12"
          >
            <!-- About Section -->
            <div class="space-y-4 border border-white/10 rounded-lg p-4">
              <h3 class="text-lg font-semibold">About GradientWall</h3>
              <p class="text-gray-300 text-sm">
                Create beautiful gradient wallpapers for your devices with just
                a few clicks. Simple, fast, and completely free to use.
              </p>
            </div>

            <!-- Social Media -->
            <div class="space-y-4 border border-white/10 rounded-lg p-4">
              <h3 class="text-lg font-bold">Follow Me</h3>
              <ul class="flex flex-col gap-2">
                <li>
                  <a
                    href="https://github.com/Tomasmoralessp"
                    class="text-gray-300 dark:text-white">GitHub</a
                  >
                </li>
                <a
                  href="https://www.linkedin.com/in/tom%C3%A1s-morales-galv%C3%A1n-a0568528b/"
                  class="text-gray-300 dark:text-white">LinkedIn</a
                >
              </ul>
            </div>
          </div>
        </div>

        <!-- Copyright -->
        <div class="mt-12 sm:mt-20 pt-8 border-t border-slate-700 text-center">
          <p class="text-gray-300">2024 GradientWall. All rights reserved.</p>
        </div>
      </footer>
    </main>
  </div>
</Layout>

<style>
  html,
  body {
    margin: 0;
    padding: 0;
  }

  @media (max-width: 640px) {
    input[type="color"] {
      border-radius: 6px;
    }
  }

  @keyframes fadeInOut {
    0% {
      opacity: 0;
    }
    20% {
      opacity: 1;
    }
    80% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }

  #downloadHint {
    animation: fadeInOut 3s ease-in-out forwards;
  }
</style>

<script>
  // Función para establecer el tema
  function setTheme(isDark) {
    if (isDark) {
      document.documentElement.classList.add("dark");
      document.getElementById("sunIcon").style.display = "block";
      document.getElementById("moonIcon").style.display = "none";
    } else {
      document.documentElement.classList.remove("dark");
      document.getElementById("sunIcon").style.display = "none";
      document.getElementById("moonIcon").style.display = "block";
    }
    localStorage.setItem("theme", isDark ? "dark" : "light");
  }

  // Inicializar tema
  const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
  const savedTheme = localStorage.getItem("theme");
  setTheme(savedTheme === "dark" || (!savedTheme && prefersDark));

  // Evento de click para cambiar el tema
  document.getElementById("themeToggle").addEventListener("click", () => {
    const isDark = document.documentElement.classList.contains("dark");
    setTheme(!isDark);
  });

  const color1 = document.getElementById("color1");
  const color2 = document.getElementById("color2");
  const gradientBox = document.getElementById("gradientBox");
  const downloadHint = document.getElementById("downloadHint");

  // Mostrar el hint al inicio
  downloadHint.style.opacity = "1";

  // Ocultar el hint después de la animación
  setTimeout(() => {
    downloadHint.style.opacity = "0";
    setTimeout(() => {
      downloadHint.style.display = "none";
    }, 500);
  }, 3000);

  // Actualizar el gradiente cuando se cambian los colores
  [color1, color2].forEach((colorPicker) => {
    colorPicker.addEventListener("input", updateGradient);
  });

  function updateGradient() {
    const gradient = `linear-gradient(to right, ${color1.value}, ${color2.value})`;
    gradientBox.style.background = gradient;
  }

  // Función para obtener la resolución real del dispositivo
  function getScreenResolution() {
    const dpr = window.devicePixelRatio || 1;

    // Obtener dimensiones de todas las pantallas disponibles
    let maxWidth = window.screen.width;
    let maxHeight = window.screen.height;

    // Si hay múltiples monitores, intentar obtener la resolución más alta
    if (window.screen.orientation) {
      maxWidth = Math.max(maxWidth, window.screen.availWidth);
      maxHeight = Math.max(maxHeight, window.screen.availHeight);
    }

    // Aplicar el factor de pixel ratio para pantallas de alta densidad
    return {
      width: Math.round(maxWidth * dpr),
      height: Math.round(maxHeight * dpr),
    };
  }

  // Función para descargar el gradiente
  function downloadWallpaper() {
    try {
      const canvas = document.createElement("canvas");
      const ctx = canvas.getContext("2d");

      if (!ctx) {
        throw new Error("No se pudo obtener el contexto 2D del canvas");
      }

      // Obtener la resolución real del dispositivo
      const resolution = getScreenResolution();
      canvas.width = resolution.width;
      canvas.height = resolution.height;

      console.log("Generando wallpaper con resolución:", resolution);

      // Crear y aplicar el gradiente
      const gradient = ctx.createLinearGradient(0, 0, canvas.width, 0);
      gradient.addColorStop(0, color1.value);
      gradient.addColorStop(1, color2.value);
      ctx.fillStyle = gradient;
      ctx.fillRect(0, 0, canvas.width, canvas.height);

      // Convertir canvas a imagen y descargar
      const dataUrl = canvas.toDataURL("image/jpeg", 1.0);
      const fileName = `gradient-wallpaper-${resolution.width}x${resolution.height}-${color1.value.substring(1)}-${color2.value.substring(1)}.jpg`;

      const link = document.createElement("a");
      link.download = fileName;
      link.href = dataUrl;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);

      // Añadir efecto visual de feedback
      gradientBox.style.transform = "scale(0.98)";
      setTimeout(() => {
        gradientBox.style.transform = "scale(1)";
      }, 200);
    } catch (error) {
      console.error("Error al generar el wallpaper:", error);
      alert(
        "Hubo un error al generar el wallpaper. Por favor, intenta de nuevo."
      );
    }
  }

  // Variables para manejar el press largo
  let pressTimer;
  let hasDownloaded = false;

  // Evento de doble clic para desktop
  gradientBox.addEventListener("dblclick", (event) => {
    event.preventDefault();
    if (!hasDownloaded) {
      hasDownloaded = true;
      downloadWallpaper();
      setTimeout(() => {
        hasDownloaded = false;
      }, 1000);
    }
  });

  // Eventos para press largo en móvil
  gradientBox.addEventListener("touchstart", (event) => {
    if (event.target.closest('input[type="color"]')) return;

    hasDownloaded = false;
    pressTimer = setTimeout(() => {
      if (!hasDownloaded) {
        hasDownloaded = true;
        downloadWallpaper();
      }
    }, 500);
  });

  gradientBox.addEventListener("touchend", () => {
    clearTimeout(pressTimer);
    setTimeout(() => {
      hasDownloaded = false;
    }, 1000);
  });

  gradientBox.addEventListener("touchmove", () => {
    clearTimeout(pressTimer);
  });

  // Prevenir el menú contextual en móvil
  gradientBox.addEventListener("contextmenu", (event) => {
    event.preventDefault();
  });
</script>

<script>
  function toggleTheme() {
    document.documentElement.classList.toggle("dark");
  }
</script>
